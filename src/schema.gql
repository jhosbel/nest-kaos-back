# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Game {
  id: Int!
  name: String!
  avatar: String
}

type UserBank {
  id: Int!
  bankId: Int!
  userId: Int!
  bankName: String!
  userBankPhone: String
  bankCode: String
  userDniBank: String
  binancePayId: String
  user: User!
}

type UserGame {
  id: Int!
  gameName: String!
  userId: Int!
  gameId: Int!
  gameUserId: String!
  nickname: String!
  gameAvatar: String!
  user: User!
}

type UserDeposit {
  id: Int!
  deposit: String!
  depositImage: String!
  userId: Int!
  rol: String!
  user: User!
}

type User {
  id: Int!
  name: String!
  avatar: String!
  email: String!
  password: String!
  phone: String!
  rol: String!
  crdBalance: Float
  usdBalance: Float
  userGameDetails: [UserGame!]
  banks: [UserBank!]
  deposits: [UserDeposit!]
}

type Bank {
  id: Int!
  name: String!
}

type UserStats {
  userId: Int!
  kills: Int
  timePlayed: String
  position: Int
}

type Room {
  id: Int!
  gameId: Int!
  gameName: String!
  roomGameId: String!
  roomPassword: String!
  playersNum: Int!
  mode: String!
  time: String!
  date: String!
  usersId: [Int!]
  status: String!
  userStats: [UserStats!]
}

type Query {
  games: [Game!]!
  game(id: Int!): Game!
  users: [User!]!
  user(id: Int!): User!
  userOneGame(id: Int!): User!
  userByEmail(email: String!): User!
  banks: [Bank!]!
  bank(id: Int!): Bank!
  rooms: [Room!]!
  room(id: Int!): Room!
  userGames: [UserGame!]!
  userGame(id: Int!): UserGame!
  userGameDetails(userId: Int!): [UserGame!]!
  userBanks: [UserBank!]!
  userBank(id: Int!): UserBank!
  UsersDeposits: [UserDeposit!]!
  UserDeposit(id: Int!): UserDeposit!
}

type Mutation {
  createGame(createGameInput: CreateGameInput!): Game!
  removeGame(id: Int!): Game!
  createUser(createUserInput: CreateUserInput!): User!
  updateUserRole(id: Int!, newRole: String!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  convertCrdToUsd(id: Int!, amount: Int!): User!
  createBank(createBankInput: CreateBankInput!): Bank!
  createRoom(createRoomInput: CreateRoomInput!): Room!
  addUserToRoom(roomId: Int!, userId: Int!): Room!
  updateRoomStatusToFinished(id: Int!): Room!
  updateUserStats(roomId: Int!, stats: [UpdateUserStatsInput!]!): Room!
  assingGameToUser(assingGameToUserInput: CreateUserGameInput!): UserGame!
  removeUserGame(userId: Int!, gameId: Int!): UserGame!
  assignBankToUser(assignBankToUser: CreateUserBankInput!): UserBank!
  removeUserBank(userId: Int!, bankId: Int!): UserBank!
  createUserDeposit(createUserDepositInput: CreateUserDepositInput!): UserDeposit!
  updateUserDepositRole(id: Int!, newRole: String!): UserDeposit!
}

input CreateGameInput {
  name: String!
  avatar: String!
}

input CreateUserInput {
  name: String!
  avatar: String
  email: String!
  password: String!
  phone: String
  crdBalance: Float
  usdBalance: Float
}

input UpdateUserInput {
  name: String
  avatar: String
  email: String
  password: String
  phone: String
  crdBalance: Float
  usdBalance: Float
  id: Int!
}

input CreateBankInput {
  name: String
  userBankPhone: String
  bankCode: String
  userDniBank: String
  binancePayId: String
}

input CreateRoomInput {
  gameId: Int!
  gameName: String!
  roomGameId: String!
  roomPassword: String!
  playersNum: Int!
  mode: String!
  time: String!
  date: String!
  status: RoomStatus! = NEW
}

enum RoomStatus {
  NEW
  STARTED
  FINISHED
}

input UpdateUserStatsInput {
  userId: Int!
  kills: Int
  timePlayed: String
  position: Int
}

input CreateUserGameInput {
  gameName: String
  gameId: Int!
  userId: Int!
  nickname: String
  gameUserId: String
  gameAvatar: String
}

input CreateUserBankInput {
  userId: Int!
  bankId: Int!
  bankName: String!
  userBankPhone: String
  bankCode: String
  userDniBank: String
  binancePayId: String
}

input CreateUserDepositInput {
  deposit: String!
  depositImage: String!
  userId: Int!
}